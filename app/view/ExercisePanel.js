/*
 * File: app/view/ExercisePanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.ExercisePanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.exercisePanel',

    requires: [
        'LanistaTrainer.view.ExercisePanelViewModel',
        'Ext.XTemplate',
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.tab.Bar'
    ],

    viewModel: {
        type: 'exercisepanel'
    },
    border: false,
    cls: 'lanista-exercise-panel',
    height: 250,
    id: 'exercisePanel',
    width: 400,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'panel',
            flex: 1,
            border: false,
            cls: 'lanista-exercise-panel-header',
            id: 'exercisePanelHeader',
            tpl: [
                '<div class="exercise">',
                '    <div class="exercise_name">{[values["name_"+Ext.ux.LanguageManager.lang]]}</div>',
                '    <div class="exercise-images">',
                '        <div id="image-start-position" class="exercise-image" style="-webkit-background-size: cover; background-image: url({[(values.ext_id && values.ext_id.indexOf(\'CUST\') != -1) ? (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \'/tpmanager/img/b/\'+values.ext_id) : \'http://lanista-training.com/app/resources/images/exercises/\'+values.ext_id]}_2.png);\'"></div>',
                '        <div id="image-start-position" class="exercise-image" style="-webkit-background-size: cover; background-image: url({[(values.ext_id && values.ext_id.indexOf(\'CUST\') != -1) ? (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \'/tpmanager/img/b/\'+values.ext_id) : \'http://lanista-training.com/app/resources/images/exercises/\'+values.ext_id]}_1.png);\'"></div>',
                '    </div>',
                '</div>'
            ]
        },
        {
            xtype: 'tabpanel',
            flex: 1,
            border: false,
            cls: 'lanista-exercise-panel-content',
            id: 'exercisePanelContent',
            activeTab: 0,
            plain: true,
            tabBarHeaderPosition: 1,
            items: [
                {
                    xtype: 'panel',
                    border: false,
                    id: 'info',
                    tpl: Ext.create('Ext.XTemplate', 
                        '<div class="exercise-description">',
                        '    <div class="exercise-coaching-key"><span><b>{[Ext.ux.LanguageManager.TranslationArray.EXECUTION]}</b></span><br>{[Ext.ux.LanguageManager.lang === "EN" ? values.coatchingnotes_EN : Ext.ux.LanguageManager.lang === "ES" ? this.strLines(values.coatchingnotes_ES) :  values.coatchingnotes_DE]}</div>',
                        '    <div class="exercise-errors"><span><b>{[Ext.ux.LanguageManager.TranslationArray.POSSIBLE_ERRORS]}</b></span><br>{[values["mistakes_"+Ext.ux.LanguageManager.lang]]}</div>',
                        '</div>',
                        {
                            strLines: function(value) {
                                var returnValue = '',
                                    strSplit = [];

                                for (var i = 0; i < value.length; i++){
                                    strSplit = value[i].split(",");
                                    for (var j = 0; j < strSplit.length; j++) {
                                        returnValue = returnValue + strSplit[j].trim().substr(0,1).toUpperCase() + strSplit[j].trim().substr(1) + '<br>';
                                    }
                                    strSplit = [];
                                }
                                return returnValue;
                            }
                        }
                    ),
                    title: 'Info'
                },
                {
                    xtype: 'panel',
                    border: false,
                    hidden: true,
                    id: 'alternatives',
                    title: 'Alternatives'
                }
            ],
            tabBar: {
                xtype: 'tabbar',
                plain: true
            }
        }
    ]

});