{
    "type": "Ext.data.Store",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ExerciseStore",
        "model": "ExerciseModel",
        "storeId": "ExerciseStore"
    },
    "name": "MyStore",
    "designerId": "b65fb5aa-1c8f-49dc-97a5-05bf512664b6",
    "cn": [
        {
            "type": "Ext.data.proxy.LocalStorage",
            "reference": {
                "name": "proxy",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "id": "a"
            },
            "name": "MyLocalStorageProxy",
            "designerId": "0aac66c0-59b6-4bc3-a80f-6a15acf6f660",
            "cn": [
                {
                    "type": "basicfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|params": [
                            "operation",
                            "callback",
                            "scope"
                        ],
                        "fn": "read",
                        "implHandler": [
                            "var me = this,",
                            "    records = [],",
                            "    i = 0,",
                            "    success = true,",
                            "    Model = me.model,",
                            "    sorters = operation.sorters,",
                            "    filters = operation.filters,",
                            "    ids, length, record, data, id;",
                            "",
                            "    operation.setStarted();",
                            "",
                            "    if(me.isHierarchical) {",
                            "        records = me.getTreeData();",
                            "    } else {",
                            "        ids = me.getIds();",
                            "        length = ids.length;",
                            "        id = operation.id;",
                            "        //read a single record",
                            "        if (id) {",
                            "            data = me.getRecord(id);",
                            "            if (data !== null) {",
                            "                record = new Model(data, id, data);",
                            "            }",
                            "",
                            "            if (record) {",
                            "                records.push(record);",
                            "            } else {",
                            "                success = false;",
                            "            }",
                            "        } else {",
                            "            console.log(operation);",
                            "            for (; i < length; i++) {",
                            "                id = ids[i];",
                            "                data = me.getRecord(id);",
                            "                records.push(new Model(data, id, data));",
                            "            }",
                            "            var collection = Ext.create('Ext.util.MixedCollection');",
                            "            collection.addAll(records);",
                            "",
                            "            me.totalCount = collection.getCount();",
                            "",
                            "            // First we comply to filters",
                            "            if (filters && filters.length) {",
                            "                collection = collection.filter(filters);",
                            "                me.totalCount = collection.getCount();",
                            "            }",
                            "            // Then we comply to sorters",
                            "            if (sorters && sorters.length) {",
                            "                collection.sort(sorters);",
                            "            }",
                            "",
                            "            console.log(me.totalCount);",
                            "            console.log(operation.start);",
                            "            console.log(operation.limit);",
                            "            records = collection.items.slice(operation.start, operation.start + operation.limit);",
                            "",
                            "        }",
                            "",
                            "    }",
                            "",
                            "    if(success) {",
                            "        operation.setSuccessful();",
                            "    }",
                            "    operation.setCompleted();",
                            "",
                            "    operation.resultSet = Ext.create('Ext.data.ResultSet', {",
                            "        records: records,",
                            "        total  : records.length,",
                            "        loaded : true",
                            "    });",
                            "",
                            "    if (typeof callback == 'function') {",
                            "        callback.call(scope || me, operation);",
                            "    }"
                        ]
                    },
                    "name": "read",
                    "designerId": "34074249-fd08-4be7-81b1-78a591c15315"
                }
            ]
        }
    ]
}