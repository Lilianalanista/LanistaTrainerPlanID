{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "PlanController"
    },
    "name": "MyController",
    "designerId": "360928aa-1eb0-4c24-86a3-64849b27a074",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "name": "mainStage",
            "designerId": "0b2b544e-db25-45ba-a2e0-848fd8bf5bf7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "exercisesPanel",
                "selector": "exercisesPanel",
                "xtype": "exercisespanel"
            },
            "name": "exercisesPanel",
            "designerId": "16a5e2fc-005d-493c-9d37-9f71531af1c4"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "name": "rightCommandPanel",
            "designerId": "d2f69faa-dccf-4f5e-858b-31b4cae3cc68"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "name": "leftCommandPanel",
            "designerId": "e2bd6df2-8f59-4d3d-b420-a4db4af63f6d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "#mainViewport",
                "xtype": "mainviewport"
            },
            "name": "mainViewport",
            "designerId": "1b53ace3-0169-4a3d-84af-4ce304a49f44"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "planPanel",
                "selector": "mainviewport #planPanel",
                "xtype": "planpanel"
            },
            "name": "planPanel",
            "designerId": "7f8e1405-84a9-426f-a70f-4bf380715d84"
        },
        {
            "type": "Ext.app.route.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "id"
                ],
                "fn": "showPlanRoute",
                "implHandler": [
                    "",
                    "var controller = this,",
                    "    plan,",
                    "    language;",
                    "",
                    "language = Ext.ux.LanguageManager.lang;",
                    "",
                    "Ext.Ajax.request({",
                    "    url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/plan/getplan\",",
                    "    params: {id: id, language: language},",
                    "    method: 'post',",
                    "    failure : function(result, request){",
                    "        console.log( \"Failure form getPlan\" );",
                    "    },",
                    "    success: function(response, opts) {",
                    "        try {",
                    "            var data = Ext.decode(response.responseText);",
                    "            plan = Ext.create('LanistaTrainer.model.Plan', {",
                    "                id: data.plan.id,",
                    "                days: data.plan.days,",
                    "                duration: data.plan.duration,",
                    "                description: data.plan.description,",
                    "                name: data.plan.name,",
                    "                creation_date: data.plan.creation_date,",
                    "                changed_date: data.plan.changed_date,",
                    "                template: data.plan.template,",
                    "                creator_name: data.plan.creator_name,",
                    "                creator_first_name: data.plan.creator_first_name,",
                    "                creator_last_name: data.plan.creator_last_name,",
                    "                creator_id: data.plan.creator_id,",
                    "                bu_name: \"\",",
                    "                bu_email: \"\",",
                    "                bu_domain: \"\"",
                    "            });",
                    "            controller.plan = plan;",
                    "            controller.exercises = data.plan.exercises;",
                    "            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "",
                    "            if( data.plan.bu > 0 ) {",
                    "                Ext.Ajax.request({",
                    "                    url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/plan/getbufromtemplate\",",
                    "                    params: {id: id},",
                    "                    method: 'post',",
                    "                    failure : function(result, request){",
                    "                        console.log( \"Fehler beim Landen vom TP\" );",
                    "                        LanistaTrainer.app.fireEvent( 'showPlanPanel', plan.data.name );",
                    "                    },",
                    "                    success: function(response, opts) {",
                    "                        try {",
                    "                            var data = Ext.decode(response.responseText);",
                    "                            //controller.bu = data.bu;",
                    "                            //controller.bu_domain = data.domain;",
                    "                            //controller.bu_name = data.name;",
                    "                            //controller.bu_email = data.email;",
                    "                            plan.data.bu_name = data.name;",
                    "                            plan.data.bu_email = data.email;",
                    "                            plan.data.bu_domain = data.domain;",
                    "                            LanistaTrainer.app.fireEvent( 'showPlanPanel', plan.data.name );",
                    "                        } catch( err ) {",
                    "                            Ext.Msg.alert('Problem', 'Templatesinformation könnten nicht gelessen werden', Ext.emptyFn);",
                    "                        }",
                    "                    }",
                    "                });",
                    "",
                    "            }",
                    "            else",
                    "                LanistaTrainer.app.fireEvent( 'showPlanPanel', plan.data.name );",
                    "        }",
                    "        catch( err ) {",
                    "            Ext.Msg.alert('Problem', 'Templatesinformation könnten nicht gelessen werden', Ext.emptyFn);",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "url": "planRoute/:id"
            },
            "name": "showPlanRoute",
            "designerId": "44b4e7cf-f097-4abc-a92d-37d2407a7b5f"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "planname",
                    "callback"
                ],
                "fn": "onShowPlanPanel",
                "implHandler": [
                    "var controller = this,",
                    "    planExercisesStore,",
                    "    values,",
                    "    record,",
                    "    planPanel,",
                    "    divLogo = '',",
                    "    divInfoCustomer = '',",
                    "    title,",
                    "    viewPort,",
                    "    records,",
                    "    planExercise,",
                    "    plan;",
                    "",
                    "    records = controller.exercises;",
                    "    controller.planname = planname;",
                    "    plan = controller.plan;",
                    "",
                    "var planPanel\t= controller.getPlanPanel(),",
                    "        mainStage\t= controller.getMainStage(),",
                    "        recordsArray = [],",
                    "        tabActiveId = controller.currentDay || controller.getPlanPanel ().down ('tabpanel').child('#d1');",
                    "",
                    "    planPanel.controller = controller;",
                    "    controller.createDayPanels ( controller.plan.data.days );",
                    "",
                    "    planPanel.on('hide', function(component) {",
                    "        component.destroy();",
                    "    }, controller);",
                    "",
                    "    planPanel.show();",
                    "",
                    "    divLogo = '';",
                    "    divInfoCustomer = '';",
                    "    title = '';",
                    "",
                    "    title = \"\";",
                    "    divLogo = \"<div class='lanista-header-template'><div class='lanista-header-plan-name'>\" + controller.planname +",
                    "              \"</div> <div class='lanista-header-plan-duration'>\"  + Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME  + ': &nbsp;' +",
                    "              controller.plan.data.duration + ' ' +",
                    "              Ext.ux.LanguageManager.TranslationArray.WEEKS + \"</div></div>\";",
                    "",
                    "    planPanel.getComponent ('planHeader').update(controller.plan.data);",
                    "    if (!controller.plan.data.description)",
                    "        Ext.get('planHeaderDescription').setHtml('No description available');",
                    "",
                    "    if (plan.data.bu_name)",
                    "    {",
                    "        Ext.get('planHeaderInfoBu').addCls('plan-header-info-bu');",
                    "        Ext.get('planHeaderValue').setHtml(plan.data.bu_name);",
                    "    }",
                    "    else",
                    "        Ext.get('planHeaderValue').setHtml(plan.data.creator_first_name + \" \" + plan.data.creator_last_name);",
                    "",
                    "    planPanel.ownerCt.ownerCt.ownerCt.getComponent('header').update({",
                    "        info: divLogo + divInfoCustomer,",
                    "        title: title",
                    "    });",
                    "",
                    "    planPanel.down ('tabpanel').setActiveTab(tabActiveId);",
                    "    controller.populateTabsExercisesByDay(records);",
                    "",
                    "    if (!controller.rounds_min && !controller.training_min){",
                    "        values = [{rounds_min: 3, training_min: 12, training_unit: 0}];",
                    "        record = tabActiveId.recordsArray && tabActiveId.recordsArray[0] ? tabActiveId.recordsArray[0] : values[0];",
                    "        controller.rounds_min = record.rounds_min;",
                    "        controller.training_min = record.training_min;",
                    "        controller.training_unit = record.training_unit;",
                    "    }",
                    "",
                    "",
                    "    controller.showCommands();",
                    "//    if (planPanel.down ('tabpanel').getActiveTab().getEl())",
                    "//        planPanel.down ('tabpanel').getActiveTab().getEl().setHeight(planPanel.down ('tabpanel').getActiveTab().el.dom.clientHeight - 45);",
                    "",
                    "    LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "    if (callback instanceof Function) callback();",
                    ""
                ],
                "name": "showPlanPanel",
                "scope": "this"
            },
            "name": "onShowPlanPanel",
            "designerId": "0611ae1b-976d-4411-b84e-682ca1c25849"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "email",
                    "password",
                    "successCallback",
                    "errorCallback"
                ],
                "fn": "onLoginUser",
                "implHandler": [
                    "        Ext.ux.SessionManager.login (email, password, function(success, data) {",
                    "            if (success) {",
                    "                if (successCallback && successCallback instanceof Function) {",
                    "                    successCallback(data);",
                    "                }",
                    "            } else {",
                    "                if (errorCallback && errorCallback instanceof Function) {",
                    "                    errorCallback(data);",
                    "                }",
                    "            }",
                    "        });"
                ],
                "name": "loginUser",
                "scope": "this"
            },
            "name": "onLoginUser",
            "designerId": "bd5b3fff-6c72-4f17-89b9-6a6de69d1a75"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowPlanHeaderUpdate",
                "implHandler": [
                    "    var controller = this,",
                    "        record = LanistaTrainer.app.currentCustomer,",
                    "        divLogo = '',",
                    "        divInfoCustomer = '',",
                    "        planPanel\t= controller.getPlanPanel(),",
                    "        title = '';",
                    "",
                    "    if (!record){",
                    "        title = \"<div class='lanista-header-template-name'>\" + Ext.ux.LanguageManager.TranslationArray.TEMPLATE_NAME + \"</div>\";",
                    "        divLogo = \"<div class='lanista-header-template'><div class='lanista-header-plan-name'>\" + controller.planname +",
                    "            \"</div> <div class='lanista-header-plan-duration'>\"  + Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME  + ': &nbsp;' +",
                    "            controller.plan.data.duration + ' ' +",
                    "            Ext.ux.LanguageManager.TranslationArray.WEEKS + \"</div></div>\";",
                    "    }",
                    "    else{",
                    "        title = \"<div class='lanista-header-plan-name'>\" + controller.planname +",
                    "            \"</div> <div class='lanista-header-plan-duration'>\"  + Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME  + ': &nbsp;' +",
                    "            controller.plan.data.duration + ' ' +",
                    "            Ext.ux.LanguageManager.TranslationArray.WEEKS + \"</div>\";",
                    "        divLogo = '<div class=\"lansita-header-customer-image-not-found\"><div class=\"lansita-header-customer-logo\" style=\"background-image: url(' + Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/p/'+ record.data.id + '_photo.jpg);\"></div></div>';",
                    "        divInfoCustomer = '<div class=\"lansita-header-customer-name\"> <span class=\"last-name\">' + record.data.last_name + '</span><br> <span class=\"first-name\">' + record.data.first_name +'</span></div>';",
                    "    }",
                    "",
                    "    planPanel.down ('#planHeader').update(controller.plan.data);",
                    "    if (!controller.plan.data.description)",
                    "        Ext.get('planHeaderDescription').setHtml('No description available');",
                    "",
                    "    controller.getMainViewport().down(\"#header\").update({",
                    "        info: divLogo + divInfoCustomer,",
                    "        title: title",
                    "    });"
                ],
                "name": "showPlanHeaderUpdate",
                "scope": "this"
            },
            "name": "onShowPlanHeaderUpdate",
            "designerId": "0fc8b395-eefa-4aec-a51b-b2aa607541c1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "days",
                    "callBack"
                ],
                "fn": "createDayPanels",
                "implHandler": [
                    "var tabPanel = this.getPlanPanel ().down ( 'tabpanel' ),",
                    "            controller = this;",
                    "",
                    "        var from = 2,",
                    "            to = days,",
                    "            newList = null;",
                    "",
                    "        for (from=2; from<=to; from++)",
                    "        {",
                    "            if (tabPanel.items.getByKey('d'+from))",
                    "                continue;",
                    "            tabPanel.insert(tabPanel.items.getCount() -1 , {",
                    "                            xtype: 'planexerciseslist',",
                    "                            id: 'd'+from,",
                    "                            itemId: 'd'+from,",
                    "                            title: Ext.ux.LanguageManager.TranslationArray.DAY + ' ' + from",
                    "                            //store: controller.plan.planLanistaTrainerModelPlanExercises()",
                    "        });",
                    "        }",
                    ""
                ]
            },
            "name": "createDayPanels",
            "designerId": "a5858dbf-c3e4-412f-8971-d54e47973a78"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "records",
                    "callBack"
                ],
                "fn": "populateTabsExercisesByDay",
                "implHandler": [
                    "var controller = this,",
                    "            tabPanel = controller.getPlanPanel().down('tabpanel'),",
                    "            recordsArray = [],",
                    "            results,",
                    "            tab;",
                    "",
                    "        for ( var i = 1; i < tabPanel.items.length; i++ ) {",
                    "            results = Ext.Array.filter(records, function(item) {",
                    "                return item.day === i.toString();",
                    "            });",
                    "            tab = tabPanel.child('#d' + i);",
                    "            for ( var j = 0; j < results.length; j++ ) {",
                    "                recordsArray.push(results[j]);",
                    "            }",
                    "            if (recordsArray) {",
                    "                if (tab){",
                    "                    tab.update(recordsArray);",
                    "                    tab.recordsArray = recordsArray;",
                    "                }",
                    "            }",
                    "            recordsArray = [];",
                    "        }",
                    "",
                    "        //This is for plans records that has been charged from a previously plan saved",
                    "        if (records.length > 0 && ( (!LanistaTrainer.app.getController ( 'PlanController' ).selectionsTab) || (LanistaTrainer.app.getController ( 'PlanController' ).selectionsTab.length === 0))) {",
                    "            var selectionsTab = [],",
                    "                itemTab = [];",
                    "",
                    "                selectionsTab[0] = [];",
                    "                for ( i = 1; i < tabPanel.items.length; i++ ) {",
                    "                    //selectionsTab[i] = [];",
                    "                    tab = tabPanel.child('#d' + i);",
                    "                    if (tab.recordsArray){",
                    "                        selection = [];",
                    "                        for ( j = 0; j < tab.recordsArray.length; j++ ) {",
                    "                            itemTab = [];",
                    "                            itemTab[0] = tab.recordsArray[j].exercise_id !== 0 ? tab.recordsArray[j].exercise_id : tab.recordsArray[j].user_exercise_id;",
                    "                            itemTab[1] = tab.recordsArray[j].exercise_ext_id;",
                    "                            itemTab[2] = 1;",
                    "                            selection.push(itemTab);",
                    "                        }",
                    "                        selectionsTab.push(selection);",
                    "                    }",
                    "                }",
                    "            controller.selectionsTab = selectionsTab;",
                    "            controller.currentDay = controller.getPlanPanel ().down ('tabpanel').getActiveTab();",
                    "        }",
                    ""
                ]
            },
            "name": "populateTabsExercisesByDay",
            "designerId": "d6fc2061-2389-4cf0-8ac4-a478ae3945ff"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setHeader"
            },
            "name": "setHeader",
            "designerId": "c0f2ea6c-ae35-4bb2-a557-e70ae657c22a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "data"
                ],
                "fn": "deleteItemView",
                "implHandler": [
                    "var PlanExercise = Ext.create('LanistaTrainer.model.PlanExercise'),",
                    "            userId = localStorage.getItem(\"user_id\");",
                    "",
                    "        PlanExercise.data = data;",
                    "        PlanExercise.phantom = false;",
                    "        PlanExercise.setProxy(new Ext.data.proxy.Ajax({",
                    "            url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/json',",
                    "            model: 'PlanExercise',",
                    "            noCache: false,",
                    "            api: {",
                    "                create: undefined,",
                    "                read: undefined,",
                    "                update: undefined,",
                    "                destroy: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/deleteexercise'",
                    "            },",
                    "            extraParams: {",
                    "                exercise_id: PlanExercise.data.id",
                    "            },",
                    "            headers: {",
                    "                user_id: userId",
                    "            }",
                    "        }));",
                    "",
                    "        PlanExercise.destroy ({",
                    "            action: 'destroy'",
                    "        });",
                    ""
                ]
            },
            "name": "deleteItemView",
            "designerId": "9d839547-8f2f-4327-8938-23482cb47dc5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callBack"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.SHARE_PLAN,",
                    "        itemId: 'sharePlanButton',",
                    "        menu: controller.setPlanOptions(),",
                    "        menuButtonAlign: 'right',",
                    "        style: 'float: left;',",
                    "        glyph: '67@Lanista Icons' //C",
                    "    })",
                    ");",
                    "",
                    "",
                    "var controller = this;",
                    "",
                    "controller.getLeftCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "var lLanguages = controller.listLanguages();",
                    "this.getLeftCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.FORM_CUSTOMER_LANGUAGE,",
                    "        itemId: 'showLanguagesPanelButton',",
                    "        menu: lLanguages,",
                    "        menuButtonAlign: 'left',",
                    "        glyph: '114@Lanista Icons' //r",
                    "    })",
                    ");",
                    "",
                    ""
                ]
            },
            "name": "showCommands",
            "designerId": "ca336aaf-6472-410d-94f4-2b7e321bf3ed"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "planHeader",
                "selector": "#planHeader"
            },
            "name": "planHeader",
            "designerId": "277d2a52-8dca-42f7-b0ff-a7d14f4e3e2f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "BUId"
                ],
                "fn": "findBUData",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "   url: LanistaPhone.util.Config.getServer_address() + LanistaPhone.util.Config.getServer_root_dir() + \"plan/getbufromtemplate\",",
                    "   params: {id: template.data.id},",
                    "   method: 'post',",
                    "   failure : function(result, request){",
                    "       console.log( \"Fehler beim Landen vom TP\" );",
                    "   },",
                    "   success: function(response, opts) {",
                    "       try {",
                    "           var data = Ext.decode(response.responseText);",
                    "           console.log (\"BU\");",
                    "           console.log( data );",
                    "           if( data.bu > 0 ) {",
                    "               LanistaPhone.app.bu = data.bu;",
                    "           } else {",
                    "               LanistaPhone.app.trainer_id = data.trainer_id;",
                    "           }",
                    "",
                    "           if( callback instanceof Function ) {",
                    "               callback();",
                    "           }",
                    "       } catch( err ) {",
                    "           Ext.Msg.alert('Problem', 'Templatesinformation könnten nicht gelessen werden', Ext.emptyFn);",
                    "       }",
                    "   }",
                    "});",
                    ""
                ]
            },
            "name": "findBUData",
            "designerId": "bc7f0569-d106-4009-a147-cc26a0c52933"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setPlanOptions",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "planOptions = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:",
                    "        [",
                    "            {text:  Ext.ux.LanguageManager.TranslationArray.SEND_EMAIL.toUpperCase(),",
                    "                    handler: function () {",
                    "                                Ext.Msg.prompt (",
                    "                                    Ext.ux.LanguageManager.TranslationArray.SEND_EMAIL,",
                    "                                    Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_INVALID_2,",
                    "                                    function (response, email_to_send) {",
                    "                                        if (response === 'ok')",
                    "                                            controller.sendEmail(email_to_send);",
                    "                                        else",
                    "                                            return;",
                    "                                    },",
                    "                                    null,",
                    "                                    false,",
                    "                                    \"\",",
                    "                                    {",
                    "                                        autoCapitalize: true,",
                    "                                        //placeHolder: Ext.ux.LanguageManager.TranslationArray.PLAN_NAME_DEFAULT,",
                    "                                        clearicon: true",
                    "                                    }",
                    "                                );",
                    "                    }",
                    "            },",
                    "            {text:  Ext.ux.LanguageManager.TranslationArray.GENERATE_PDF.toUpperCase(),",
                    "                    handler: function () {",
                    "                                controller.generatePdf(controller.plan.data.id);",
                    "                    }",
                    "            }",
                    "        ]",
                    "    }",
                    ");",
                    "",
                    "",
                    "return planOptions;",
                    ""
                ]
            },
            "name": "setPlanOptions",
            "designerId": "16619f7e-3362-44d6-bbac-9d19a5b7516f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "planid"
                ],
                "fn": "generatePdf",
                "implHandler": [
                    "var controller = this;",
                    "Ext.Ajax.request({",
                    "    url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/plan/generatepdf\",",
                    "    method: 'post',",
                    "    params: { plan_id: planid, language: Ext.ux.LanguageManager.lang },",
                    "    timeout: 60000,",
                    "    failure : function(response){",
                    "        //Ext.Viewport.setMasked( false );",
                    "        data = Ext.decode(response.responseText);",
                    "        console.log ( data );",
                    "        Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_PDF_SYNC_ERROR, '', Ext.emptyFn );",
                    "    },",
                    "    success: function(response, opts) {",
                    "        data = Ext.decode ( response.responseText);",
                    "        if ( data.success )",
                    "        {",
                    "            var ref = window.open( Ext.ux.ConfigManager.getServer() +\"/docs/tp_\" + planid + \".pdf\" , '_system', 'location=yes' );",
                    "        } else {",
                    "            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_PDF_PROBLEM, '', Ext.emptyFn);",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "name": "generatePdf",
            "designerId": "16ac9e82-f2cb-4b15-8898-38cd5d930347"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "email"
                ],
                "fn": "sendEmail",
                "implHandler": [
                    "        var controller = this;",
                    "        if(!controller.validateEmail(email)) {",
                    "            Ext.Msg.alert(Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_INVALID_1,",
                    "                          Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_INVALID_2,",
                    "                          function() {",
                    "                              Ext.Msg.prompt (",
                    "                                    Ext.ux.LanguageManager.TranslationArray.SEND_EMAIL,",
                    "                                    Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_INVALID_2,",
                    "                                    function (response, email_to_send) {",
                    "                                        if (response === 'ok')",
                    "                                            controller.sendEmail(email_to_send);",
                    "                                        else",
                    "                                            return;",
                    "                                    },",
                    "                                    null,",
                    "                                    false,",
                    "                                    \"\",",
                    "                                    {",
                    "                                        autoCapitalize: true,",
                    "                                        //placeHolder: Ext.ux.LanguageManager.TranslationArray.PLAN_NAME_DEFAULT,",
                    "                                        clearicon: true",
                    "                                    }",
                    "                                );",
                    "                          });",
                    "        } else {",
                    "            var controller = this;",
                    "                try{",
                    "                    Ext.Ajax.request({",
                    "                        url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/plan/sendmail\",",
                    "                        method: 'post',",
                    "                        params: { plan_id: controller.plan.data.id, email: email },",
                    "                        headers: { user_id: localStorage.getItem(\"user_id\") },",
                    "                        failure : function(response){",
                    "                            data = Ext.decode(response.responseText);",
                    "                            console.log ( data );",
                    "                            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, '', Ext.emptyFn );",
                    "                        },",
                    "                        success: function(response, opts) {",
                    "                            data = Ext.decode ( response.responseText);",
                    "                            if (data.success !== true)",
                    "                            {",
                    "                                Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, data.message, Ext.emptyFn);",
                    "                            } else {",
                    "                                //Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, data.message, Ext.emptyFn);",
                    "                                Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_SENT, '', Ext.emptyFn );",
                    "                            }",
                    "                        }",
                    "                    });",
                    "                ",
                    "                } catch( err ) {",
                    "                       Ext.Msg.alert(Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, '', Ext.emptyFn);",
                    "                }",
                    "",
                    "        }",
                    ""
                ]
            },
            "name": "sendEmail",
            "designerId": "40a8945a-36f7-4680-b32b-4585df1fe439"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "email"
                ],
                "fn": "validateEmail",
                "implHandler": [
                    "var controller = this;",
                    "var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;",
                    "",
                    "return (reg.test(email) === true);",
                    ""
                ]
            },
            "name": "validateEmail",
            "designerId": "92e40f70-0a8a-4322-b63a-c27f14723533"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "listLanguages",
                "implHandler": [
                    "    var menuItems = new Array();",
                    "    currLanguage = Ext.ux.LanguageManager.lang;",
                    "",
                    "    if (currLanguage == 'DE') {",
                    "        menuItems.push(",
                    "        {",
                    "            text:'ENGLISH',",
                    "            handler: function () {",
                    "                                     LanistaTrainer.app.fireEvent('changeLanguage', 'EN', true);",
                    "                                 }",
                    "        });",
                    "        menuItems.push(",
                    "        {",
                    "            text:'ESPAÑOL',",
                    "            handler: function () {",
                    "                                     LanistaTrainer.app.fireEvent('changeLanguage', 'ES', true);",
                    "                                 }",
                    "        });",
                    "    } else if (currLanguage == 'EN') {",
                    "        menuItems.push(",
                    "        {",
                    "            text:'DEUTSCH',",
                    "            handler: function () {",
                    "                                     LanistaTrainer.app.fireEvent('changeLanguage', 'DE', true);",
                    "                                 }",
                    "        });",
                    "        menuItems.push(",
                    "        {",
                    "            text:'ESPAÑOL',",
                    "            handler: function () {",
                    "                                     LanistaTrainer.app.fireEvent('changeLanguage', 'ES', true);",
                    "                                 }",
                    "        });",
                    "    } else {",
                    "        menuItems.push(",
                    "        {",
                    "            text:'DEUTSCH',",
                    "            handler: function () {",
                    "                                     LanistaTrainer.app.fireEvent('changeLanguage', 'DE', true);",
                    "                                 }",
                    "        });",
                    "        menuItems.push(",
                    "        {",
                    "            text:'ENGLISH',",
                    "            handler: function () {",
                    "                                     LanistaTrainer.app.fireEvent('changeLanguage', 'EN', true);",
                    "                                 }",
                    "        });",
                    "    }",
                    "",
                    "",
                    "    var languages = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:[]",
                    "    });",
                    "    languages.add(menuItems);",
                    "",
                    "    return languages;",
                    ""
                ]
            },
            "name": "listLanguages",
            "designerId": "53ec4753-44c9-410e-bcd7-9baa716d4b78"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #showLanguagesPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onShowLanguagesPanelButtonClick",
                "implHandler": [
                    "    button.menu.alignTo(button, 'c-c',[-220,0]);",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onShowLanguagesPanelButtonClick",
            "designerId": "5f2d688c-5bda-4907-8bfa-6757f796d6b9"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "language",
                    "doQuestion"
                ],
                "fn": "onChangeLanguage",
                "implHandler": [
                    "Ext.ux.LanguageManager.setLanguage(language, function () {",
                    "    if (doQuestion)",
                    "    {",
                    "        Ext.Msg.confirm(Ext.ux.LanguageManager.TranslationArray.MSG_LANGUAGE_RESTART_1, Ext.ux.LanguageManager.TranslationArray.MSG_LANGUAGE_RESTART_2, function(button) {",
                    "            self.lang = language;",
                    "            if (button == 'yes') {",
                    "                location.reload();",
                    "            }",
                    "        });",
                    "    }",
                    "    else",
                    "        self.lang = language;",
                    "});"
                ],
                "name": "changeLanguage",
                "scope": "this"
            },
            "name": "onChangeLanguage",
            "designerId": "d76508a1-3b0a-4b78-884b-51c3a8e270a0"
        }
    ]
}